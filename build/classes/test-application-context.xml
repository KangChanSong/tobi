<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="com.mysql.cj.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost/testdb"></property>
		<property name="username" value="root"></property>
		<property name="password" value="1234"></property>
	</bean>
	
	<bean id="userDao" class="com.tobi.domain.UserDaoJdbc">
		<property name="dataSource" ref="dataSource"></property>
		<property name="sqlService" ref="sqlService"></property>
	</bean>
	
	<bean id="sqlService" class="com.tobi.service.OxmSqlService">
	<property name="unmarshaller" ref="unmarshaller"></property>
	</bean>
	
	<bean id="sqlReader" class="com.tobi.sql.JaxbXmlSqlReader">
		<property name="sqlMapFile" value="sqlmap.xml"></property>
	</bean>
	<bean id="sqlRegistry" class="com.tobi.sql.HashMapSqlRegistry"></bean>
	
	
	<bean id="userService" class="com.tobi.service.UserServiceImpl">
		<property name="userDao" ref="userDao"></property>
		<property name="mailSender" ref="mailSender"></property>
	</bean>
	
	<bean id="upgradePolicy" class="com.tobi.service.DefaultUserUpgradePolicy">
		<property name="userDao" ref="userDao"></property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="mailSender" class="com.tobi.utils.DummyMailSender">
	</bean>
	
	<bean id="message" class="com.tobi.factorybean.MessageFactoryBean">
		<property name="text" value="Factory Bean"></property>
	</bean>
	
	
<!-- 	<bean id="transactionAdvice" class="com.tobi.aop.TransactionAdvice">
		<property name="transactionManager" ref="transactionManager"></property>
	</bean> -->
	<bean id="testUserService" class="com.tobi.test.UserServiceTest$TestUserServiceImpl" parent="userService"></bean>
	
<!-- 	<bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="userServiceImpl"></property>
		<property name="interceptorNames">
		 어드바이스와 어드바이저를 동시에 설정해 줄 수 있는 프로퍼티
			<list>
				<value>transactionAdvisor</value>
			</list>
		</property>
	</bean> -->
	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"></bean>
	
<!-- 	<aop:config>
		<aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)"/>
	</aop:config>
	
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	 -->
	 <bean id="unmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
	 	<property name="contextPath" value="com.tobi.domain.sql.jaxb"></property>
	 </bean>
	 
	<tx:annotation-driven/>

</beans>